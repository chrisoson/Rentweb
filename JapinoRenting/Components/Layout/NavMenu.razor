@implements IDisposable

@inject NavigationManager NavigationManager

<div class="navbar">
    <div class="navbar-start">
        <h1 class="font-bold text-2xl pl-2">Japino Renting</h1>
    </div>
    <div class="navbar-center lg:flex hidden">
        <ul class="menu menu-horizontal px-1">
            <li>
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span aria-hidden="true"></span> Home
                </NavLink>
            </li>
            <li>
                <NavLink class="nav-link" href="counter">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
                </NavLink>
            </li>
            <li>
                <NavLink class="nav-link" href="weather">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
                </NavLink>
            </li>
            <li>
                <NavLink class="nav-link" href="auth">
                    <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
                </NavLink>
            </li>
            <AuthorizeView>
                <Authorized>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="Account/Manage">
                            <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken/>
                            <input type="hidden" name="ReturnUrl" value="@currentUrl"/>
                            <button type="submit" class="nav-link">
                                <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                            </button>
                        </form>
                    </li>
                </Authorized>
                <NotAuthorized>
                    <li>
                        <NavLink class="nav-link" href="Account/Register">
                            <span aria-hidden="true"></span> Register
                        </NavLink>
                    </li>
                    <li>
                        <NavLink class="nav-link" href="Account/Login">
                            <span aria-hidden="true"></span> Login
                        </NavLink>
                    </li>
                </NotAuthorized>
            </AuthorizeView>
        </ul>
    </div>
    <div class="navbar-end">
        <div class="dropdown dropdown-bottom dropdown-end">
            <div tabindex="0" role="button" class="btn btn-ghost lg:hidden">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16"/></svg>
            </div>
            <ul tabindex="0" class="menu menu-md dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
                <li>
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li>
                    <NavLink class="nav-link" href="counter">
                        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
                    </NavLink>
                </li>
                <li>
                    <NavLink class="nav-link" href="weather">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
                    </NavLink>
                </li>
                <li>
                    <NavLink class="nav-link" href="auth">
                        <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
                    </NavLink>
                </li>
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item px-3">
                            <NavLink class="nav-link" href="Account/Manage">
                                <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                            </NavLink>
                        </li>
                        <li class="nav-item px-3">
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken/>
                                <input type="hidden" name="ReturnUrl" value="@currentUrl"/>
                                <button type="submit" class="nav-link">
                                    <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                                </button>
                            </form>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li>
                            <NavLink class="nav-link" href="Account/Register">
                                <span aria-hidden="true"></span> Register
                            </NavLink>
                        </li>
                        <li>
                            <NavLink class="nav-link" href="Account/Login">
                                <span aria-hidden="true"></span> Login
                            </NavLink>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</div>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

